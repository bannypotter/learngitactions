name: GitHub Actions Demo
on: push
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # Display the event that triggered the workflow
      - run: echo "The job was triggered by a ${{ github.event_name }} event."
      
      # Runner information
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub"
      
      # Information about the repository and branch
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      # Use Action located in https://github.com/actions
      - name: Check out repository code
        uses: actions/checkout@v4  
      
      - name: Set up Python version
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      
      - name: Create and start virtual environment
        run: |
            python -m venv venv
            source venv/bin/activate
      
      - name: Set up dependency caching for faster installs
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - name: Install dependencies
        run: pip install -r requirements.txt

      # Optional: Add a step to run tests here (PyTest, Django test suites, etc.)

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .
            !venv/
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Log into Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Bicep file
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ${{ github.workspace }}/deployment/app-deployment.bicep
        parameters: "appServicePlanName=bannyappplan webAppName=${{ secrets.WEBAPP_NAME }}"
        failOnStdErr: false